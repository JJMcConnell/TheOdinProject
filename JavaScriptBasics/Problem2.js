/*https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms. */



var currentTerm = 0;
//The way I currently have it implemented current term is not checked until after the first pass
//This makes the function miss 2 when adding up the even values
//So I'm being lazy and just starting the sum at 2 instead :^)
var sum = 2;
var n = 1;
var nPlusOne = 2;
var next = 0;

while (currentTerm <= 4000000) {

	next = (n + nPlusOne);
	n = nPlusOne;
	nPlusOne = next;
	currentTerm = next;

	if ((currentTerm % 2 ) === 0) {
		sum += currentTerm;
	}
}

console.log(sum);